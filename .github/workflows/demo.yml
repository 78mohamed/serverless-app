name: demo Parallel
on:
  workflow_dispatch:

jobs:
  get_customers:
    runs-on: ubuntu-latest
    outputs:
      customers: ${{ steps.customers.outputs.customers }}
    steps:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: get the ssm paramaters
        id: customers
        run: |
          customers=$(aws ssm get-parameter --name customers --query "Parameter.Value" --output text)
          echo $customers
          customers="[${customers}]"
          echo $customers
          echo "customers=$customers" >> "$GITHUB_OUTPUT"

  customer-deployment:
    runs-on: ubuntu-latest
    needs: get_customers
    strategy:
      matrix:
        customers: ${{ fromJSON(needs.get_customers.outputs.customers) }}

    steps:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: modifiy frontend enviroment
        run: |
          data=$(aws ssm get-parameters-by-path --path /${{ matrix.customers }}/app/frontendConfig --query "Parameters[].[Name,Value]" --output json)
          input_file="src/enviroments/enviroment.ts"
          variable_names=$(echo "$data" | jq -r '.[].[0]' | jq -s .)
          echo $variable_names
          for variable in "${variable_names[@]}"; do
            part_to_remove="/${{ matrix.customers }}/app/frontendConfig/"
            modified_value=${variable#$part_to_remove}
            value=$(echo "$data" | jq -r --arg var "/${{ matrix.customers }}/app/frontendConfig/frontendUrl/$value" '.[] | select(.[0] == $var) | .[1]')
            sed -i "s/\\\$$modified_value/$value/g" "$input_file"
    
      - name: create .env
        run: |
          aws ssm get-parameters-by-path --path /${{ matrix.customers }}/app/backendConfig --recursive --query "Parameters[*].[Name,Value]" --output text | sed 's|^/${{ matrix.customers }}/app/backendConfig/||; s|\t|=|g' > .env

      - name: Install serverless framework & dependencies
        run: |
          export secret_manager=$(aws ssm get-parameter --name /${{ matrix.customers }}/app/IAC/secret_manager --query "Parameter.Value" --output text)
          export runtime=$(aws ssm get-parameter --name /${{ matrix.customers }}/app/IAC/runtime --query "Parameter.Value" --output text)
          export securityGroupId=$(aws ssm get-parameter --name /${{ matrix.customers }}/app/IAC/securityGroupId --query "Parameter.Value" --output text)
          export stage=$(aws ssm get-parameter --name /${{ matrix.customers }}/app/IAC/stage --query "Parameter.Value" --output text)
          export subnetId=$(aws ssm get-parameter --name /${{ matrix.customers }}/app/IAC/subnetId --query "Parameter.Value" --output text)
          npm install -g serverless@3.36.0
          npm install serverless-python-requirements
          sls plugin install -n serverless-offline@13.6.0
          sls deploy --param "secret_manager=new-test"
